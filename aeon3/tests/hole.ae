
f<K> : (x:Integer) -> Integer {
    x + 1;
}

f2 : (x:Integer) -> Integer {
    x + x;
}

// Done - [{x:Integer | x > 0} -> Integer]
hole1 : (y:Integer) -> ({x:Integer | x > 0} -> Integer) {
    [];
}


// Done - [Top]
hole2 : (y:Integer) -> Integer {
    [];
    1;
}

hole35 : (y:Integer) -> Integer {
    // [TypeApp(Integer String)]
    f<Integer>([]);
    1;
}


// Done - [Top]
  hole3 : (y:Integer) -> Integer {
    1;
    [];
    2;
}


 h : () -> Integer {
    1;
    x : Boolean = [];
    2;
}



// Done - [Boolean]
 hole4 : (y:Integer) -> Boolean {
    1;
    2;
    [];
}


 hole5 : (y:Integer) -> Double {
    \x : String -> [];
}


 hole6 : (y:Integer) -> Double {
    // Top
    \z : String -> [];
    1;
    \a : String -> \b : Integer -> [];
    2;
    \c : String -> \d : Integer -> [];
    3.0;
}


 hole7 : (y:Integer) -> Integer {
    y > 0 ? [] : true;
}


 hole8 : (y:Integer) -> Integer {
    y > 0 ? [] : y;
    1;
}


 hole9 : (y:Integer) -> Integer {
    [] ? 3 : 10;
}


 hole10 : (y:Integer) -> Integer {
    f2([]);
}


 h2 : (y:Integer) -> Integer {
    f([](2));
    1;
}

 h3 : (y:Integer) -> Integer {
    (\x:Integer -> x + 1)([]);
    1;
}


 hole11 : (y:Integer) -> {x:Integer | x > 10} {
    [](10);
}

 hole12 : (y:Integer) -> Double {
    []([]);
}

 hole13 : (y:Integer) -> Double {
    []([]([]));
}

 hole14 : (y:Integer) -> {x:Double | x > 0.0} {
    [] ? [] : [];
}

 funcao : (x:Integer) -> Integer {
	1;
	if x > 9 {
		3;
		5;
		[];
        6;
	} else {
		4;
	};
    2;
}

 hole15 : (x:Integer) -> Integer {
    2;
}

 main : () -> Void {

    2 + 3;
    1;
    {x : {y : Integer | y < 20} | x > 10} = 10;
    abc = 10;
    3;
    a = [];
    print((\x:T -> x + 1)<Integer>(3));
}
