type Array<Integer, String<Integer, T>>;

def test : (x:Integer) -> Integer {
    x * 10;
}

def aplicaFuncao : (f:(Integer -> Integer)) -> z:Integer {
    3;
    10;
    \x : Integer -> \y : Integer -> x + y;
    1;
    print(f(9));
}

def fatorial : (x:Integer) -> Integer {
    x == 0 ? 1 : x * fatorial(x - 1);
}

def fibonacci : ({x:Integer | x > 0}) -> Integer {
    x == 0 || x == 1 ? x : fibonacci(x - 1) + fibonacci(x - 2);
}
def main : () -> Void {
    print("Result of applying lambda function:");
    aplicaFuncao(\x:Integer -> x + 1);

    print("Result of applying a function:");
    aplicaFuncao(test);
    
    print("Result of fatorial:");
    print(fatorial(5));
    
    print("Result of applying fibonacci:");
    print(fibonacci(3));

    print("Result of Application and Abstraction:");
    print((\x : Integer -> x + 1)(4));

    
    // TODO: verificar isto tudo
    // f : Integer -> Integer = \x : Integer -> x + y;

    0;
}
