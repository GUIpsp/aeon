// Import
// import teste;
// import test2;
// import ../aeon2/teste2;
// import funcao from ../teste;


// Type Alias
// type Teste as Teste;

// Types
// type Test1;
// type Test2<T>;
// type Test3<Integer>;
// type Test4<T, Integer>;
// type Test5<Integer, T>;
// type Test6<K, V>;
// type Test7<T, T>;
// type Test8<Map<K, V>>;
// type Test9<Map<Integer, V>>;
// type Tes10<(Integer -> Integer)>;
// type Test11<(K -> V)>;
//type Test12<({x:Integer | x > 0} -> Double)>;
// type Test13<{x:Map<Map<K, V>> | x > 0}>;
// type Test14<({x:Map<Map<K, V>> | x > 0} -> Map<R, S>)>;
// type Test15<({x:Integer | x > 0} -> Double)>;

type Teste<T> {
    asd:Integer;
}

f: ({x:Teste<Integer> | x.asd > 0}) -> Integer {
    10;
}

native_fun : (x:String) -> String = native;