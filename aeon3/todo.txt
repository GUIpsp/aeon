TO DO:
		+ Circular Imports
		+ Ignore basic True/False expressions with z3
	| tapps e tabs
	| Examples & Tests running

DOING:
	| Resolve the types of each statement
	| Fix the types declarations
	
DONE:
	| Make verifiers for errors before parsing
		+ Vars, functions and Types existance 
	| Resolve imports
	| Change the function Array.name to name only
	| Override the ErrorBaseListener from antlr4 and launch exception after lexer failure

TODO: 
	Fix a estrutura do projeto (Nao esquecer o normal)
	Corrigir o tabs e tapps
	Corrigir o TypeAbstraction e TypeApplication
	Bidirectional typechecking
	Fixpoint para funcoes recursivas
	Pensar para os types com argumentos. Tenho de fazer conversões

QUESTIONS:	
	todos os nos da arvore têm de ter os tipos?
	Problem: circular imports in python
	
-----------------------------------------	
	type QUalQuerCoisa {
		x:Integer,
		y:String
	}

	qualquercoisa_x(o:QualquerCoisa) -> Inteiro = uninterpreted
-----------------------------------------


	old:
    type Map<String, X> = X:* => (Map.String).X
	
	TypeAbstraction(
		BasicType(X),
		star,
		TypeApplication (
			TypeApplication(
				BasicType(Map),
				BasicType(String)
			),
			BasicType(X)
		)
	)