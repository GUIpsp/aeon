type Color;
type Image;

def Color_mk :
    (r:{r:Int | r >= 0 && r < 256}) ->
    (g:{r:Int | r >= 0 && r < 256}) ->
    (b:{r:Int | r >= 0 && r < 256}) ->
    Color = native "lambda r: lambda g: lambda b: (r, g, b)";


def Image_height : (im:Image) -> Int = uninterpreted;
def Image_width : (im:Image) -> Int = uninterpreted;

def Image_mk :
    (width:{p:Int | p > 0}) ->
    (height:{p:Int | p > 0}) ->
    (color:Color) ->
    {i : Image | (Image_width i == width) && (Image_height i == height) } =
native "__import__('aeon.bindings.image').bindings.image.Image_mk";

def Image_save : (path:String) -> (image:Image) -> Unit = native "lambda path: lambda im: im.save(path)";
def Image_open : (path:String) -> Image = native "__import__('PIL.Image').Image.open";

def Image_diff : (img : Image) -> (img : Image) -> Float = native "__import__('aeon.bindings.image').bindings.image.Image_diff";

def Image_draw_rectangle :
    (x:{p:Int | p > 0}) ->
    (y:{p:Int | p > 0}) ->
    (width:{p:Int | p > 0}) ->
    (height:{p:Int | p > 0}) ->
    (color:Color) ->
    (im:{i:Image | (x + width < Image_width i) && (y + height < Image_height i) }) ->
    Image = native "__import__('aeon.bindings.image').bindings.image.Image_draw_rectangle";
