# Given an integer n, return "Fizz" if n is divisible by 3,
# "Buzz" if n is divisible by 5, "FizzBuzz" if n is
# divisible by 3 and 5, and a string version of n if none of
# the above hold (convert integer to string).
# input : integer in [1, 1000000]
# output : string
# --not working properly--

#constants
def constant_i : Int = 0;
def constant_i3 : Int = 3;
def constant_i5 : Int = 5;
def constant_FizzBuzz : String = "FizzBuzz";
def constant_Buzz : String = "Buzz";
def constant_Fizz : String = "Fizz";


def div3 ( n :{x:Int | 1 <= x && x <= 1000000}) : Bool { if ((n % 3) == 0) then true else false}
def div5 ( n :{x:Int | 1 <= x && x <= 1000000}) : Bool  {if ((n % 5) == 0)  then true else false}
def div15 ( n :{x:Int | 1 <= x && x <= 1000000}) : Bool {if ((n % 15) == 0)  then true else false}


def FizzBuzz ( n :{x:Int | 1 <= x && x <= 1000000}) : String {

    if div15 n then "FizzBuzz" else (if ((n % 3) == 0) then "Fizz" else (if ((n % 5) == 0)  then "Buzz" else native "str(n)"))

}

def synth_fizz ( n :{x:Int | 1 <= x && x <= 1000000}) : String {

    (?hole:String)

}
