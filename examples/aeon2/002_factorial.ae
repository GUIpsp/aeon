type IntToInt = (a:Integer) -> Integer

fix : (a:*) => (f:(x:a) -> a) -> a = native;
(-) : (a:Integer) -> (b:Integer) -> {c:Integer where ((a-b) == c)} = native;
(*) : (a:Integer) -> (b:Integer) -> {c:Integer where ((a*b) == c)} = native;

factorial : IntToInt  = (fix[IntToInt])(\f:IntToInt -> (\x:Integer -> 1));

main : Void = print( factorial(5) );


