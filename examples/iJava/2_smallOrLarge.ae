import ..prelude.J

# TODO: We really need if's and operators to be working otherwise we're stuck

smallerThan : (i:Integer, j:Integer) -> out:Boolean {
    i < j
}

greaterThan : (i:Integer, j:Integer) -> out:Boolean {
    j > i
}

iif : (b:Boolean, i:Integer, i2:Integer) -> out:Integer {

    val = J.iif(b, () -> i, () -> i2)
    val
}

# in < 1000 -> out == "small", era ganda sintaxe incluir implicacoes
smallOrLarge : (in:Integer) -> out:String where [((!(in < 1000) || (out == "small")) ||
                                                 (!(in > 2000) || (out == "large"))) ||
                                                 (!((1000 <= in) && (in <= 2000)) || (out == "normal"))] {
    â€¦
    ###
    J.iif(
    in < 1000,
    () -> "small",
    () -> J.iif(
          in > 2000,
          () -> "large",
          () -> "normal"
          )
    )
    ###
}

main : (_:Array<String>) -> _:Void {
   a : Integer = 1000
   J.out(smallOrLarge(a))
}
