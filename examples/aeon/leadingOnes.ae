import ../libraries/math;
import ../libraries/list;

type RestrictedInt as {x:Integer | (x == 0) || (x == 1)};

sum_list({l:List[RestrictedInt] | l.size >= 0}) -> {x:Integer | x >= 0} {
    
    if (length_list[RestrictedInt](l) == 0) {
        0;
    } else {
        head_list[RestrictedInt](l) * pow[Integer](2, length_list[RestrictedInt] - 1);
    };
}

leadingOnes() -> {l:List[RestrictedInt] | l.size == 8 and 
                                          @maximize(sum_list(l))} {
    ??;
}