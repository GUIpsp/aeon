import aeon/libraries/list;

// TODO: Bug, unable to check uninterpreted functions

main() -> Top {

    // Create an empty list
    print[String]("Empty list");
    l1 : List[Integer] = empty_list[Integer]();
    print[List[Integer]](l1);

    // Append to the list
    print[String]("Apppend to list");
    l2 : List[Integer] = append_list[Integer](1, l1);
    print[List[Integer]](l2);
    l2 = append_list[Integer](2, l2);
    print[List[Integer]](l2);
    l2 = append_list[Integer](3, l2);
    print[List[Integer]](l2);

    // Extend a list with another list
    print[String]("Extend a list with another list");
    l4 : List[Integer] = append_list[Integer](1, empty_list[Integer]());
    l5 : List[Integer] = append_list[Integer](2, empty_list[Integer]());
    print[List[Integer]](extend_list[Integer](l1, l2)); // 0 items with + items
    print[List[Integer]](extend_list[Integer](l2, l1)); // + items with 0 items
    print[List[Integer]](extend_list[Integer](l4, l5)); // 1 item with 1 item
    print[List[Integer]](extend_list[Integer](l5, l4)); // 1 item with 1 item
    print[List[Integer]](extend_list[Integer](l2, l4)); // + items with 1 item
    print[List[Integer]](extend_list[Integer](l4, l2)); // 1 item with + items

    // Insert at a specific place
    print[String]("Insert in a list");
    print[List[Integer]](insert_list[Integer](0, l2, 0));
    print[List[Integer]](insert_list[Integer](4, l2, 3));
    // print[Integer](insert_list[Integer](5000, l2, 5000)); // TODO: Should give error

    // Remove the first occurence
    print[String]("Remove an occurence");
    print[List[Integer]](remove_list[Integer](-1, l2));
    print[List[Integer]](remove_list[Integer](1, l2));
    print[List[Integer]](remove_list[Integer](2, l2));
    print[List[Integer]](remove_list[Integer](3, l2));

    // Check if list contains element
    print[String]("Contains an element");
    print[Boolean](contains_list[Integer](-1, l2));
    print[Boolean](contains_list[Integer](2, l2));

    // Count the amount of times an element occur
    print[String]("Count the times of element");
    print[Integer](count_list[Integer](-1, l2));
    print[Integer](count_list[Integer](1, l2));

    // Reverse a list
    print[String]("Reversing lists");
    print[List[Integer]](reverse_list[Integer](empty_list[Integer]()));
    print[List[Integer]](reverse_list[Integer](l2));

    // Exists
    print[String]("Exists in lists");
    f : (x:Integer -> Boolean) = \x: Integer -> x > 2;
    print[Boolean](exists_list[Integer](f, l2));

    // Forall    
    print[String]("Forall in lists");
    f : (x:Integer -> Boolean) = \x: Integer -> x > 2;
    print[Boolean](forall_list[Integer](f, l2));

    // Filter to get non-empty and empty list
    print[String]("Filter in lists");
    f : (x:Integer -> Boolean) = \x: Integer -> x > 2;
    f2 : (x:Integer -> Boolean) = \x: Integer -> x > 10;
    print[List[Integer]](filter_list[Integer](f, l2));
    print[List[Integer]](filter_list[Integer](f2, l2));

    // Map
    print[String]("Map in lists");
    f : (x:Integer -> Integer) = \x: Integer -> x * 2;
    f2 : (x:Integer -> Integer) = \x: Integer -> -x;
    print[List[Integer]](map_list[Integer, Integer](f, l2));
    print[List[Integer]](map_list[Integer, Integer](f2, l2));

}
