import aeon/libraries/strings;

type Person {
    name:String;
}

buildPerson(x:String) -> Person = native;

main() -> Top {
    
    print[String]("Testing string operations");
    print[String]("=======================");

    print[String]("Concat:");
    print[String](concat("ola", "adeus"));

    print[String]("Size:");
    print[Integer](size("ola"));

    print[String]("Equals:");
    print[Boolean](equals("ola", "ola"));
    print[Boolean](equals("ola", "adeus"));
    
    print[String]("Replace:");
    print[String](replace("ola", "adeus", "olatudobem"));

    // It works, but we would have to implement the buildPerson function
    // {p : Person | p.name.size == 5} = buildPerson("Paulo");

    // TODO: Bug here
    // print[String]("ASCII:");
    // print[Integer](ascii("ola"));
}