import ..prelude.J


type Integer as Nat where [ self >= 0 ]

times : (i:Nat, j:Nat) -> a:Nat where [a == (i * j)] {
   (i*j)
}

id : (i:Integer) -> j:Integer {
   i
}

v : (i:Nat, k:Nat) -> j:Integer where [ id(j) == ((i * i) * 5) and j >= 0] {
   â€¦
}


main : (_:Array<String>) -> _:Void {
   J.out(v(1,2))
}