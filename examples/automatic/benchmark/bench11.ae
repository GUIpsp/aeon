import aeon/libraries/strings;
import aeon/libraries/list;

// String Lengths Backwards:
// -------------------------
// Given a vector of strings, print the length of each string in
// the vector starting with the last and ending with the first.
string_lengths_backwards(l:List<String>) -> out:List<Integer> where {l.size == out.size and
                                                forall(\i:Integer -> length(elemAt(i, reverse(l))) == elemAt(i, out), range(0, length(l)))} {
    map<String, Integer>(\x:String -> length(x), reverse(l));
    // [List<Integer>]
}




main() -> Top {
    l: List<String> = empty_list<String>();
    l = append<String>("ola", l);
    l = append<String>("tudo", l);
    l = append<String>("bem", l);
    
    print(string_lengths_backwards(l));
}