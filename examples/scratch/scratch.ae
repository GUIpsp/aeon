native J.iif : T => (_:Boolean, _: () -> T, _:() -> T) -> _:T

type Integer where [ (self == 1) || (self == 2) ] as S

w : (_:Integer) -> a:{Integer where  (self == 1) || (self == 2) } {
   # a : S = J.iif(true, () -> 2, () -> 1)
   J.iif(true, () -> 2, () -> 1)
}

main : (args:Array<String>) -> _:Void {
   w(1)
}
